import type { CsvData, DynamicColumnsType, onDataResponseWithBatching, onDataResponseWithoutBatching, onRecordEditType, onRecordsInitialType, ThemeType } from "./types";
declare const useCsvPlugin: ({ importerKey, user, metadata, onData, onRecordsInitial, onRecordEdit, importerDisplay, onClose, theme, batchSize, sampleFileURL, downloadExampleButton, dynamicColumns, }: {
    importerKey: string;
    user?: Record<string, string | number> | undefined;
    metadata?: Record<string, string | number> | undefined;
    onData?: ((data: CsvData, close: () => void) => void | onDataResponseWithoutBatching | onDataResponseWithBatching) | undefined;
    onRecordsInitial?: onRecordsInitialType | undefined;
    onRecordEdit?: onRecordEditType | undefined;
    importerDisplay?: "inline" | "modal" | undefined;
    onClose?: (() => void) | undefined;
    theme?: ThemeType | undefined;
    batchSize?: number | undefined;
    sampleFileURL?: string | undefined;
    downloadExampleButton?: boolean | undefined;
    dynamicColumns?: DynamicColumnsType | undefined;
}) => Promise<import("penpal").Connection<import("penpal").CallSender>>;
export default useCsvPlugin;
//# sourceMappingURL=useCsvPlugin.d.ts.map